<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.16">
  <compounddef id="_health_bar_8cpp" kind="file" language="C++">
    <compoundname>HealthBar.cpp</compoundname>
    <includes refid="_health_bar_8h" local="yes">HealthBar.h</includes>
    <incdepgraph>
      <node id="3">
        <label>Stats.h</label>
        <link refid="_stats_8h"/>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="11">
        <label>SFML/Graphics.hpp</label>
      </node>
      <node id="4">
        <label>string</label>
      </node>
      <node id="12">
        <label>SFML/Audio.hpp</label>
      </node>
      <node id="1">
        <label>HealthBar.cpp</label>
        <link refid="_health_bar_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="6">
        <label>enums.h</label>
        <link refid="enums_8h"/>
      </node>
      <node id="10">
        <label>SFML/Window.hpp</label>
      </node>
      <node id="13">
        <label>Button.h</label>
        <link refid="_button_8h"/>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="5">
        <label>UnitFrame.h</label>
        <link refid="_unit_frame_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="7" relation="include">
        </childnode>
      </node>
      <node id="7">
        <label>Clickable.h</label>
        <link refid="_clickable_8h"/>
        <childnode refid="6" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
        <childnode refid="8" relation="include">
        </childnode>
        <childnode refid="9" relation="include">
        </childnode>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
      </node>
      <node id="8">
        <label>iostream</label>
      </node>
      <node id="2">
        <label>HealthBar.h</label>
        <link refid="_health_bar_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="5" relation="include">
        </childnode>
        <childnode refid="13" relation="include">
        </childnode>
      </node>
      <node id="9">
        <label>SFML/System.hpp</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para>Plik definicyjny klasy Healthbar. </para>
    </briefdescription>
    <detaileddescription>
<para>Plik definicyjny klasy Healthbar. </para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_health_bar_8h" kindref="compound">HealthBar.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal">HealthBar::HealthBar(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>x,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>y)</highlight></codeline>
<codeline lineno="12"><highlight class="normal">{</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/>barTexture.loadFromFile(path<sp/>+<sp/>healthBar);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/>backgroundTexture.loadFromFile(path<sp/>+<sp/>healthBackground);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;barSprite.setTexture(barTexture);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;backgroundSprite.setTexture(backgroundTexture);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;backgroundSprite.setPosition(x,<sp/>y);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;barSprite.setPosition(x<sp/>+<sp/>offset,<sp/>y<sp/>+<sp/>offset);</highlight></codeline>
<codeline lineno="21"><highlight class="normal">}</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HealthBar::Render(sf::RenderTarget*<sp/>target)</highlight></codeline>
<codeline lineno="24"><highlight class="normal">{</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;draw(this-&gt;backgroundSprite);</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>target-&gt;draw(this-&gt;barSprite);</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>HealthBar::Update(</highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>percentage)</highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(percentage<sp/>&gt;=<sp/>0)</highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barSprite.setScale({<sp/>percentage,<sp/>1.0f<sp/>});</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>barSprite.setScale({<sp/>0.0f,<sp/>1.0f<sp/>});</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="HealthBar.cpp"/>
  </compounddef>
</doxygen>
